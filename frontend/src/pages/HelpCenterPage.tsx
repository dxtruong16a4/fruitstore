import React, { useState } from 'react';
import { ChevronDown, ChevronUp } from 'lucide-react';
import { HelpCategories, ContactSupport } from '../components';
import { PageLayout } from '../components/layout';

const HelpCenterPage: React.FC = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [expandedFAQ, setExpandedFAQ] = useState<number | null>(null);

  const faqs = [
    {
      id: 1,
      question: "L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t h√†ng?",
      answer: "ƒê·∫∑t h√†ng r·∫•t ƒë∆°n gi·∫£n! Ch·ªâ c·∫ßn duy·ªát qua s·ªë l∆∞·ª£ng tr√°i c√¢y t∆∞∆°i, th√™m v√†o gi·ªè h√†ng v√† ti·∫øn h√†nh thanh to√°n. B·∫°n c√≥ th·ªÉ t·∫°o t√†i kho·∫£n ƒë·ªÉ thanh to√°n nhanh h∆°n ho·∫∑c thanh to√°n d∆∞·ªõi d·∫°ng kh√°ch."
    },
    {
      id: 2,
      question: "B·∫°n c√≥ cung c·∫•p giao h√†ng nhanh kh√¥ng?",
      answer: "Ch√∫ng t√¥i cung c·∫•p giao h√†ng ngay h√¥m ƒë√≥ cho ƒë∆°n h√†ng ƒë·∫∑t tr∆∞·ªõc 2 PM, v√† giao h√†ng ng√†y mai cho t·∫•t c·∫£ c√°c ƒë∆°n h√†ng kh√°c. Giao h√†ng mi·ªÖn ph√≠ tr√™n ƒë∆°n h√†ng tr√™n 50.000 VNƒê. Ch√∫ng t√¥i c≈©ng cung c·∫•p giao h√†ng ƒë·∫∑t tr∆∞·ªõc cho b·∫°n thu·∫≠n ti·ªán."
    },
    {
      id: 3,
      question: "L√†m th·∫ø n√†o ƒë·ªÉ theo d√µi ƒë∆°n h√†ng c·ªßa m√¨nh?",
      answer: "Khi ƒë∆°n h√†ng ƒë∆∞·ª£c x√°c nh·∫≠n, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c m·ªôt s·ªë tracking number qua email. B·∫°n c≈©ng c√≥ th·ªÉ theo d√µi ƒë∆°n h√†ng b·∫±ng c√°ch ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n c·ªßa m√¨nh v√† truy c·∫≠p v√†o ph·∫ßn 'ƒê∆°n h√†ng c·ªßa t√¥i'."
    },
    {
      id: 4,
      question: "T√¥i kh√¥ng h√†i l√≤ng v·ªõi tr√°i c√¢y c·ªßa m√¨nh, t√¥i c√≥ th·ªÉ ƒë·ªïi tr·∫£ kh√¥ng?",
      answer: "Ch√∫ng t√¥i ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng c·ªßa s·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i. N·∫øu b·∫°n kh√¥ng h√†i l√≤ng ho√†n to√†n, li√™n h·ªá ch√∫ng t√¥i trong v√≤ng 24 gi·ªù v√† ch√∫ng t√¥i s·∫Ω cung c·∫•p ho√†n tr·∫£ ƒë·∫ßy ƒë·ªß ho·∫∑c thay th·∫ø."
    },
    {
      id: 5,
      question: "B·∫°n c√≥ cung c·∫•p tr√°i c√¢y h·ªØu c∆° kh√¥ng?",
      answer: "C√≥! Ch√∫ng t√¥i c√≥ m·ªôt s·ªë lo·∫°i tr√°i c√¢y h·ªØu c∆° t·ª´ n√¥ng tr·∫°i ƒë·ªãa ph∆∞∆°ng. T√¨m ki·∫øm nh√£n 'H·ªØu c∆°' tr√™n trang s·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i."
    },
    {
      id: 6,
      question: "L√†m th·∫ø n√†o ƒë·ªÉ l∆∞u tr·ªØ tr√°i c√¢y c·ªßa m√¨nh?",
      answer: "H·∫ßu h·∫øt c√°c lo·∫°i tr√°i c√¢y n√™n ƒë∆∞·ª£c l∆∞u tr·ªØ trong t·ªß l·∫°nh ƒë·ªÉ duy tr√¨ t∆∞∆°i. Chu·ªëi v√† m·ªôt s·ªë lo·∫°i tr√°i c√¢y tropical c√≥ th·ªÉ ƒë∆∞·ª£c l∆∞u tr·ªØ ·ªü nhi·ªát ƒë·ªô ph√≤ng. Ki·ªÉm tra trang s·∫£n ph·∫©m c·ª• th·ªÉ ƒë·ªÉ c√≥ h∆∞·ªõng d·∫´n l∆∞u tr·ªØ."
    },
    {
      id: 7,
      question: "T√¥i c√≥ th·ªÉ s·ª≠a ƒë·ªïi ho·∫∑c h·ªßy ƒë∆°n h√†ng c·ªßa m√¨nh kh√¥ng?",
      answer: "ƒê∆°n h√†ng c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠a ƒë·ªïi ho·∫∑c h·ªßy trong v√≤ng 30 ph√∫t sau khi ƒë·∫∑t h√†ng. Sau ƒë√≥, vui l√≤ng li√™n h·ªá ƒë·ªôi h·ªó tr·ª£ kh√°ch h√†ng c·ªßa ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£."
    },
    {
      id: 8,
      question: "B·∫°n ch·∫•p nh·∫≠n ph∆∞∆°ng th·ª©c thanh to√°n n√†o?",
      answer: "Ch√∫ng t√¥i ch·∫•p nh·∫≠n t·∫•t c·∫£ c√°c th·∫ª t√≠n d·ª•ng ch√≠nh (Visa, MasterCard, American Express), PayPal v√† Apple Pay cho s·ª± ti·ªán l·ª£i c·ªßa b·∫°n."
    }
  ];

  const helpCategories = [
    {
      title: "ƒê·∫∑t h√†ng & Thanh to√°n",
      icon: "üõí",
      topics: ["L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t h√†ng", "Ph∆∞∆°ng th·ª©c thanh to√°n", "X√°c nh·∫≠n ƒë∆°n h√†ng", "Thanh to√°n kh√°ch"]
    },
    {
      title: "Giao h√†ng & V·∫≠n chuy·ªÉn",
      icon: "üöö",
      topics: ["C√°c t√πy ch·ªçn giao h√†ng", "Chi ph√≠ v·∫≠n chuy·ªÉn", "Th·ªùi gian giao h√†ng", "Theo d√µi ƒë∆°n h√†ng c·ªßa b·∫°n"]
    },
    {
      title: "ƒê·ªïi tr·∫£ & Ho√†n tr·∫£",
      icon: "‚Ü©Ô∏è",
      topics: ["Ch√≠nh s√°ch ƒë·ªïi tr·∫£", "L√†m th·∫ø n√†o ƒë·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m", "Quy tr√¨nh ho√†n tr·∫£", "ƒê·∫£m b·∫£o ch·∫•t l∆∞·ª£ng"]
    },
    {
      title: "T√†i kho·∫£n & H·ªì s∆°",
      icon: "üë§",
      topics: ["T·∫°o t√†i kho·∫£n", "V·∫•n ƒë·ªÅ ƒëƒÉng nh·∫≠p", "C·∫≠p nh·∫≠t h·ªì s∆°", "L·ªãch s·ª≠ ƒë∆°n h√†ng"]
    },
    {
      title: "S·∫£n ph·∫©m & Ch·∫•t l∆∞·ª£ng",
      icon: "üçé",
      topics: ["Th√¥ng tin s·∫£n ph·∫©m", "T√πy ch·ªçn h·ªØu c∆°", "H∆∞·ªõng d·∫´n l∆∞u tr·ªØ", "Kh·∫£ nƒÉng s·∫£n xu·∫•t theo m√πa"]
    },
    {
      title: "H·ªó tr·ª£ k·ªπ thu·∫≠t",
      icon: "üíª",
      topics: ["V·∫•n ƒë·ªÅ trang web", "·ª®ng d·ª•ng di ƒë·ªông", "T∆∞∆°ng th√≠ch tr√¨nh duy·ªát", "B·∫£o m·∫≠t t√†i kho·∫£n"]
    }
  ];

  const filteredFAQs = faqs.filter(faq => 
    faq.question.toLowerCase().includes(searchQuery.toLowerCase()) ||
    faq.answer.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const toggleFAQ = (id: number) => {
    setExpandedFAQ(expandedFAQ === id ? null : id);
  };

  return (
    <PageLayout
      title="L√†m th·∫ø n√†o ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ gi√∫p b·∫°n?"
      subtitle="T√¨m c√¢u tr·∫£ l·ªùi cho c√°c c√¢u h·ªèi th∆∞·ªùng g·∫∑p ho·∫∑c li√™n h·ªá v·ªõi ƒë·ªôi h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i."
      showHero={true}
      heroProps={{
        showSearch: true,
        searchPlaceholder: "T√¨m ki·∫øm h·ªó tr·ª£...",
        onSearch: setSearchQuery
      }}
    >

      <HelpCategories categories={helpCategories} />

      {/* FAQ Section */}
      <section className="py-16 bg-white">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              {searchQuery ? 'K·∫øt qu·∫£ t√¨m ki·∫øm' : 'C√°c c√¢u h·ªèi th∆∞·ªùng g·∫∑p'}
            </h2>
            <p className="text-gray-600 text-lg">
              {searchQuery ? `T√¨m th·∫•y ${filteredFAQs.length} k·∫øt qu·∫£` : 'C√¢u tr·∫£ l·ªùi nhanh cho c√°c c√¢u h·ªèi th∆∞·ªùng g·∫∑p'}
            </p>
          </div>

          <div className="space-y-4">
            {filteredFAQs.map((faq) => (
              <div key={faq.id} className="bg-gray-50 rounded-lg overflow-hidden">
                <button
                  onClick={() => toggleFAQ(faq.id)}
                  className="w-full px-6 py-4 text-left flex justify-between items-center hover:bg-gray-100 transition"
                >
                  <span className="text-lg font-semibold text-gray-900">{faq.question}</span>
                  {expandedFAQ === faq.id ? (
                    <ChevronUp className="w-5 h-5 text-gray-500" />
                  ) : (
                    <ChevronDown className="w-5 h-5 text-gray-500" />
                  )}
                </button>
                {expandedFAQ === faq.id && (
                  <div className="px-6 pb-4">
                    <p className="text-gray-600 leading-relaxed">{faq.answer}</p>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      <ContactSupport />
    </PageLayout>
  );
};

export default HelpCenterPage;
